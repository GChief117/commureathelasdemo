// -----------------------------------------------------------------------------
//  <DownloadModal/> – Dialog with checkboxes to pick which summaries
//  to export. Replace alert() with real PDF/CSV builder.
// -----------------------------------------------------------------------------
import * as React from "react";
import {
  Dialog,
  DialogTrigger,
  DialogSurface,
  DialogTitle,
  DialogBody,
  DialogActions,
  Button,
  Checkbox,
  makeStyles
} from "@fluentui/react-components";
import { Save16Regular } from "@fluentui/react-icons";

const useStyles = makeStyles({
  box: { display: "flex", flexDirection: "column", gap: "0.5rem" }
});

export default function DownloadModal() {
  const styles = useStyles();
  const [checked, setChecked] = React.useState({
    short: false,
    long: false,
    quoted: false,
    all: false
  });

  // stub download handler
  const onDownload = () => {
    // TODO: assemble blob + trigger saveAs()
    alert("Downloading: " + JSON.stringify(checked, null, 2));
  };

  return (
    <Dialog>
      <DialogTrigger disableButtonEnhancement>
        <Button icon={<Save16Regular />}>Download Summaries</Button>
      </DialogTrigger>

      <DialogSurface>
        <DialogTitle>Download Summaries</DialogTitle>

        <DialogBody>
          <div className={styles.box}>
            {Object.entries(checked).map(([k, v]) => (
              <Checkbox
                key={k}
                checked={v}
                label={
                  k === "short"
                    ? "Short Summary"
                    : k === "long"
                    ? "Long Summary"
                    : k === "quoted"
                    ? "Quoted Summary"
                    : "All Summaries"
                }
                onChange={(_, d) => setChecked({ ...checked, [k]: d.checked })}
              />
            ))}
          </div>
          <p style={{ marginTop: "0.5rem", fontSize: "0.8rem" }}>
            I agree to ensure that downloaded summaries generated by this AI are
            accurate before sharing or reusing them.
          </p>
        </DialogBody>

        <DialogActions>
          {/* Closing the dialog automatically by nesting trigger */}
          <DialogTrigger disableButtonEnhancement>
            <Button appearance="primary" onClick={onDownload}>
              Agree & Download
            </Button>
          </DialogTrigger>
          <DialogTrigger disableButtonEnhancement>
            <Button appearance="secondary">Cancel</Button>
          </DialogTrigger>
        </DialogActions>
      </DialogSurface>
    </Dialog>
  );
}
